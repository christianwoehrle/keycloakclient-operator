// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "github.com/christianwoehrle/keycloakclient-operator/pkg/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// Keycloaks returns a KeycloakInformer.
	Keycloaks() KeycloakInformer
	// KeycloakClients returns a KeycloakClientInformer.
	KeycloakClients() KeycloakClientInformer
	// KeycloakRealms returns a KeycloakRealmInformer.
	KeycloakRealms() KeycloakRealmInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// Keycloaks returns a KeycloakInformer.
func (v *version) Keycloaks() KeycloakInformer {
	return &keycloakInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// KeycloakClients returns a KeycloakClientInformer.
func (v *version) KeycloakClients() KeycloakClientInformer {
	return &keycloakClientInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// KeycloakRealms returns a KeycloakRealmInformer.
func (v *version) KeycloakRealms() KeycloakRealmInformer {
	return &keycloakRealmInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
